1)  Что такое "стандарт языка". Что он описывает.

набор правил и спецификаций, которые определяют синтаксис и семантику языка программирования. 
Он описывает, как должны быть написаны программы на данном языке, какие функции и операторы доступны,
 как они работают и как взаимодействуют между собой.


2)  Откуда берется "стандарт" языка. Кто контролирует этот процесс. 
Какими принципами руководствуются при изменение стандарта.

Стандарт языка программирования создается организацией, ответственной за разработку и поддержку языка
(для с++ это Международный стандартный комитет по языку C++).
 Принципы: учет потребностей пользователей, улучшение производительности, безопасности и расширяемости языка.

3)  Кто и каким образом реализует "стандарт", каковы плюсы и минусы у этого подхода. Приведите примеры.

Реализацию стандарта языка программирования обычно осуществляют компании-разработчики компиляторов и интерпретаторов.
 Плюсы: обеспечивает единообразие и совместимость между различными реализациями языка.
 Минусы: отставание от последних технологических достижений и необходимость обновления стандарта для поддержки новых возможностей языка.


4)  Библиотеки. Зачем нужны, из каких частей состоят, в каком виде могут поставляться.

Библиотеки - это наборы функций и классов, которые предоставляются для использования в программах на языке программирования.
 Они могут состоять из различных частей, например, функций для работы с файлами, сетевыми протоколами, графическими интерфейсами пользователя и т.д.
 Библиотеки могут поставляться в виде исходных кодов или уже скомпилированных бинарных файлов.

5)  Почему шаблоны следует реализовать только в h файлах.

Шаблоны следует реализовывать только в h файлах, чтобы обеспечить возможность инлайн-оптимизации и ускорения выполнения программы. 
Если шаблоны реализованы в cpp файлах, то компилятор не сможет проводить инлайн-оптимизацию и будет вынужден генерировать код для каждого вызова шаблона, 
что может существенно замедлить работу программы.